#include <ctype.h>
#include <cs50.h>
#include <stdio.h>
#include <string.h>

// Points assigned to each letter of the alphabet
int POINTS[] = {1, 3, 3, 2, 1, 4, 2, 4, 1, 8, 5, 1, 3, 1, 1, 3, 10, 1, 1, 1, 1, 4, 4, 8, 4, 10};

int compute_score(string word);

int main(void)
{
    // Get input words from both players
  
    string word1 = get_string("Player 1: ");
    string word2 = get_string("Player 2: ");

    // Score both words
    int score1 = compute_score(word1);
    int score2 = compute_score(word2);

    // TODO: Print the winner
    if (score1=score2)
    {
        printf("Tie!\n"); 
    }    
    else if (score1>score2)
    {
        printf("Player 1 Win!!\n"); 
    }
    else 
    {
        printf("Player 2 Win!!\n");
    }
}

int compute_score(string word)
{
    // TODO: Compute and return score for string

    int n=strlen (word);
    char c;
    int pos=0, score=0;

    for (int i=0; i< n; i++)
    {
        // buscar el valor ascii (65 - A, 90 - Z) de la palabra y buscar la referencia en el arreglo POINTS
        c= word[i];
        c= toupper(c);
        if (isascii(c) >= 65 && isascii(c)<= 90) //es una letra
            {
             pos= toascii(c);
             score=POINTS[(pos-65)] + score;
            }
    }
    return score;

}


___________________________________________

Code for bulbs.c
_____________________________________________



#include <cs50.h>
#include <stdio.h>
#include <string.h>

const int BITS_IN_BYTE = 8;
int bits[BITS_IN_BYTE];

void print_bulb(int bit);
string get_sentence(void);
void to_binary(string s_message);
void convert_binary(int to_bit);

int main(void)
{
    string s_message = " ";
    // TODO
    // get string to convert
    s_message = get_sentence();
    // convert to binary
    to_binary(s_message);
    // print string
}

void print_bulb(int bit)
{
    if (bit == 0)
    {
        // Dark emoji
        printf("\U000026AB");
    }
    else if (bit == 1)
    {
        // Light emoji
        printf("\U0001F7E1");
    }
}

string get_sentence(void)
{
    string s_sent;

    s_sent = get_string("Message: ");

    return s_sent;
}

void to_binary(string s_message)
{
    int N = strlen(s_message);

    int to_bit = 0;

    for (int i = 0; i < N; i++)
    {
        to_bit = (s_message[i]);
        // call convert_binary to convert a character to bits
        convert_binary(to_bit);
        // call print_bulb
        for (int j = 0; j < BITS_IN_BYTE; j++)
        {
            print_bulb(bits[j]);
        }
        printf("\n");
    }
}

void convert_binary(int to_bit)
{
    int n_data = to_bit;

    for (int i = 1; i < BITS_IN_BYTE; i++)
    {
        // to know is right most bit is 0 or 1 (even)

        if (n_data % 2 == 0)
        {
            bits[BITS_IN_BYTE - i] = 0;
        }
        else
        {
            bits[BITS_IN_BYTE - i] = 1;
        }

        n_data = n_data / 2;
    }
}


