


Si i=0
	Si j= 0
		Sumar A,B,D,E
	
	
	Si  j  > 0 && j < width -1
		
		Sumar D,E,F,G,H,I
		
	
	si j= width -1
	
		sumar D,G, H, E

Si i= height -1 
	
	si j= 0
		sumar B, C, E,F

	Si  j  > 0 && j < width -1
		
		sumar A,B,C,D,E,F

	si j= width -1
		
		sumar A,B,D,E


Si (  i > 0 &&  i< height -1)

	si  j= 0 

		sumar B,C,E,F,H,I

	Si  j= widht - 1 
		
		sumar A,B,D,E,G,H

si (  i > 0 &&  i< height -1) && ( j > 0 && j < width - 1)
	
	sumar a,b,c,d,e,f,g


_____________________________________

A = fullrow[i-1][j-1]
B= fullrow[i-1][j]
C=fullrow[i-1][j+1]

D = fullrow[i][j-1]
E= fullrow[i][j]
F= fullrow[i][j+1]

G = fullrow[i + 1][j-1]
H = fullrow[i+ 1][j]
I = fullrow[i+1][j+1]





 if ( (i == 0  && j == 0) || (i == 0  && j == width - 1) || (i == (height- 1) && j == 0) || ( i == (height- 1) && j == (width -1)) )
                {
                    if (i == 0  && j == 0)
                    {
                        // corner up left
                         // suma de valor [i][j] + [i][j+1] + [i+1][j] + [i + 1 ][j + 1]
                       image[i][j].rgbtBlue= (int) round (fullrow[i][j].rgbtBlue + fullrow[i][j +1].rgbtBlue
                     + fullrow[i + 1][j].rgbtBlue + fullrow[i + 1][j + 1].rgbtBlue) / 4.0 ;
                     image[i][j].rgbtGreen= (int) round (fullrow[i][j].rgbtGreen + fullrow[i][j +1].rgbtGreen
                     + fullrow[i + 1][j].rgbtGreen + fullrow[i + 1][j + 1].rgbtGreen) /4.0 ;
                      image[i][j].rgbtRed= (int) round (fullrow[i][j].rgbtRed + fullrow[i][j +1].rgbtRed
                     + fullrow[i + 1][j].rgbtRed + fullrow[i + 1][j + 1].rgbtRed) / 4.0 ;
                     }
                    if (i == 0  && j == width - 1)
                      {
                        // corner up right
                         // suma de valor [i][j] + [i][j-1] + [i+1][j] + [i+1][j-1]
                          image[i][j].rgbtBlue= (int)round (fullrow[i][j].rgbtBlue + fullrow[i][j - 1].rgbtBlue
                             + fullrow[i + 1][j].rgbtBlue + fullrow[i + 1][j - 1].rgbtBlue) / 4.0 ;
                          image[i][j].rgbtGreen= (int)round (fullrow[i][j].rgbtGreen + fullrow[i][j - 1].rgbtGreen
                              + fullrow[i + 1][j].rgbtGreen + fullrow[i + 1][j - 1].rgbtGreen) / 4.0 ;
                          image[i][j].rgbtRed= (int)round (fullrow[i][j].rgbtRed + fullrow[i][j - 1].rgbtRed
                             + fullrow[i + 1][j].rgbtRed + fullrow[i + 1][j - 1].rgbtRed) / 4.0 ;
                      }
                    if (i == (height- 1) && j == 0)
                     {
                        // corner down left
                        // suma de valor [i][j] + [i-1][j-1] + [i-1][j+1] + [i][j+1]

                      image[i][j].rgbtBlue= (int)round (fullrow[i][j].rgbtBlue + fullrow[i - 1][j - 1].rgbtBlue
                         + fullrow[i - 1][j + 1].rgbtBlue + fullrow[i][j + 1].rgbtBlue) / 4.0 ;
                       image[i][j].rgbtGreen= (int)round (fullrow[i][j].rgbtGreen + fullrow[i -1 ][j - 1].rgbtGreen
                          + fullrow[i - 1][j + 1].rgbtGreen + fullrow[i][j + 1].rgbtGreen) / 4.0 ;
                       image[i][j].rgbtRed= (int)round (fullrow[i][j].rgbtRed + fullrow[i - 1][j - 1].rgbtRed
                           + fullrow[i - 1][j + 1].rgbtRed + fullrow[i][j + 1].rgbtRed) / 4.0 ;

                       }
                   if ( i == (height- 1) && j == (width -1))
                   {
                     // corner down right
                      // suma de valor [i][j] + [i-1][j] + [i-1][j-1] + [i][j-1]

                     image[i][j].rgbtBlue= (int)round (fullrow[i][j].rgbtBlue + fullrow[i - 1][j].rgbtBlue
                      + fullrow[i - 1][j - 1].rgbtBlue + fullrow[i][j -1].rgbtBlue) / 4.0 ;

                     image[i][j].rgbtGreen= (int)round (fullrow[i][j].rgbtGreen + fullrow[i -1 ][j].rgbtGreen
                      + fullrow[i - 1][j - 1].rgbtGreen + fullrow[i][j - 1].rgbtGreen) / 4.0 ;

                      image[i][j].rgbtRed= (int)round (fullrow[i][j].rgbtRed + fullrow[i - 1][j].rgbtRed
                        + fullrow[i - 1][j - 1].rgbtRed + fullrow[i - 1][j - 1].rgbtRed) / 4.0 ;

                     }
                }

              // no corners but edge

            if ( ( (i >= 1  && i <= height - 2) && j == 0) ||  ( (i >= 1  && i <= height - 2) && j == width -1 )
                  || ( i==0  && ((j >= 1) && j <= width - 2)) || (i==height-1 && ((j >= 1) && (j < width -1))) )
              {
                  if ( (i >= 1  && i <= height - 2) && j == 0)
                   {
                      // recorrer primera columna sin esquinas
                     //suma de valor [i-1][j] + [i - 1][j + 1] + [i][j + 1] + [i + 1][j + 1] + [i + 1][j - 1] + [i][j]

                      image[i][j].rgbtBlue=  (int) round(fullrow[i-1][j].rgbtBlue + fullrow[i - 1][j + 1].rgbtBlue
                         + fullrow[i][j + 1].rgbtBlue + fullrow[i + 1][j + 1].rgbtBlue
                         + fullrow[i + 1][j - 1].rgbtBlue + fullrow[i][j].rgbtBlue) / 6.0;

                        image[i][j].rgbtGreen=  (int) round(fullrow[i-1][j].rgbtGreen + fullrow[i - 1][j + 1].rgbtGreen
                          + fullrow[i][j + 1].rgbtGreen + fullrow[i + 1][j + 1].rgbtGreen
                          + fullrow[i + 1][j - 1].rgbtGreen + fullrow[i][j].rgbtGreen) / 6.0;

                          image[i][j].rgbtRed=  (int) round(fullrow[i-1][j].rgbtRed + fullrow[i - 1][j + 1].rgbtRed
                            + fullrow[i][j + 1].rgbtRed + fullrow[i + 1][j + 1].rgbtRed
                          + fullrow[i + 1][j - 1].rgbtRed + fullrow[i][j].rgbtRed) / 6.0;


                     }
                      if ( (i >= 1  && i <= height - 2) && j == width -1 )
                       {
                          // recorrer ultima columna sin esquinas
                          //suma de valor [i-1][j] + [i - 1][j - 1] + [i][j - 1] + [i + 1][j - 1] + [i + 1][j] + [i][j]
                           image[i][j].rgbtBlue=  (int) round(fullrow[i-1][j].rgbtBlue + fullrow[i - 1][j - 1].rgbtBlue
                                  + fullrow[i][j - 1].rgbtBlue + fullrow[i + 1][j - 1].rgbtBlue
                                   + fullrow[i + 1][j].rgbtBlue + fullrow[i][j].rgbtBlue) / 6.0;
                          image[i][j].rgbtGreen =  (int) round(fullrow[i-1][j].rgbtGreen + fullrow[i - 1][j - 1].rgbtGreen
                              + fullrow[i][j - 1].rgbtGreen + fullrow[i + 1][j - 1].rgbtGreen
                               + fullrow[i + 1][j].rgbtGreen + fullrow[i][j].rgbtGreen) / 6.0;
                           image[i][j].rgbtRed =  (int) round(fullrow[i-1][j].rgbtRed + fullrow[i - 1][j - 1].rgbtRed
                           + fullrow[i][j - 1].rgbtRed + fullrow[i + 1][j - 1].rgbtRed
                              + fullrow[i + 1][j].rgbtRed + fullrow[i][j].rgbtRed) / 6.0;

                      }
                      if ( i==0  && ((j >= 1) && j <= width - 2))
                       {
                         //primera fila hasta penultima columna
                         // suma de valor [i][j-1] + [i][j+1] + [i + 1][j - 1] + [i + 1][j] + [i + 1][j + 1] + [i][j]
                        image[i][j].rgbtBlue= (int) round (fullrow[i][j-1].rgbtBlue + fullrow[i][j+1].rgbtBlue
                          + fullrow[i + 1][j - 1].rgbtBlue + fullrow[i + 1][j].rgbtBlue
                          + fullrow[i + 1][j + 1].rgbtBlue + fullrow[i][j].rgbtBlue) / 6.0;

                          image[i][j].rgbtGreen=(int) round(fullrow[i][j-1].rgbtGreen + fullrow[i][j+1].rgbtGreen
                           + fullrow[i + 1][j - 1].rgbtGreen + fullrow[i + 1][j].rgbtGreen
                           + fullrow[i + 1][j + 1].rgbtGreen + fullrow[i][j].rgbtGreen) / 6.0;

                          image[i][j].rgbtRed= (int) round(fullrow[i][j-1].rgbtRed + fullrow[i][j+1].rgbtRed
                             + fullrow[i + 1][j - 1].rgbtRed + fullrow[i + 1][j].rgbtRed
                           + fullrow[i + 1][j + 1].rgbtRed + fullrow[i][j].rgbtRed) / 6.0;
                         }

                      if (i==height-1 && ((j >= 1) && (j < width -1)))
                         {
                           // recorrer ultima fila
                           // suma de valor [i][j-1] + [i-1][j-1] + [i-1][j] + [i - 1][j + 1] + [i + 1][j + 1] + [i][j]
                             image[i][j].rgbtBlue= (int) round(fullrow[i][j-1].rgbtBlue + fullrow[i-1][j-1].rgbtBlue
                             + fullrow[i-1][j].rgbtBlue + fullrow[i - 1][j + 1].rgbtBlue
                              + fullrow[i + 1][j + 1].rgbtBlue + fullrow[i][j].rgbtBlue) / 6.0;

                             image[i][j].rgbtGreen= (int) round(fullrow[i][j-1].rgbtGreen + fullrow[i-1][j-1].rgbtGreen
                             + fullrow[i-1][j].rgbtGreen + fullrow[i - 1][j + 1].rgbtGreen
                               + fullrow[i + 1][j + 1].rgbtGreen + fullrow[i][j].rgbtGreen) / 6.0;


                             image[i][j].rgbtRed= (int) round(fullrow[i][j-1].rgbtRed + fullrow[i-1][j-1].rgbtRed
                             + fullrow[i-1][j].rgbtRed + fullrow[i - 1][j + 1].rgbtRed
                             + fullrow[i + 1][j + 1].rgbtRed + fullrow[i][j].rgbtRed) / 6.0;
                        }

                    }
                    else
                    {
                          // all pixels [i-1][j-1] + [i - 1][j] +
                         // [i - 1 ][j + 1] + [i][j - 1] + [i][j] +
                          //[i][j+1] + [i + 1][j - 1] + [i+ 1][j] + [ i + 1][j + 1]
                          image[i][j].rgbtBlue= (int) round (fullrow[i-1][j-1].rgbtBlue + fullrow[i - 1][j].rgbtBlue + fullrow[i - 1 ][j + 1].rgbtBlue
                               + fullrow[i][j - 1].rgbtBlue + fullrow[i][j].rgbtBlue + fullrow[i][j+1].rgbtBlue
                              + fullrow[i + 1][j - 1].rgbtBlue + fullrow[i+1][j].rgbtBlue + fullrow[ i + 1][j + 1].rgbtBlue)/ 9.0;

                            image[i][j].rgbtGreen= (int) round (fullrow[i-1][j-1].rgbtGreen + fullrow[i - 1][j].rgbtGreen
                              + fullrow[i - 1 ][j + 1].rgbtGreen + fullrow[i][j - 1].rgbtGreen
                              + fullrow[i][j].rgbtGreen + fullrow[i][j+1].rgbtGreen + fullrow[i + 1][j - 1].rgbtGreen
                               + fullrow[i + 1][j].rgbtGreen + fullrow[ i + 1][j + 1].rgbtGreen) / 9.0;

                             image[i][j].rgbtRed= (int) round(fullrow[i-1][j-1].rgbtRed + fullrow[i - 1][j].rgbtRed
                             + fullrow[i - 1 ][j + 1].rgbtRed + fullrow[i][j - 1].rgbtRed
                             + fullrow[i][j].rgbtRed+ fullrow[i][j+1].rgbtRed + fullrow[i + 1][j - 1].rgbtRed
                           + fullrow[i + 1][j].rgbtRed + fullrow[ i + 1][j + 1].rgbtRed) / 9.0;
                      }

                }
           }

 return;
}



	


